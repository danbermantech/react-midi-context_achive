{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import React, {\n  useMemo, createContext, useContext, useReducer, useCallback, useRef, useState, useEffect\n} from 'react';\n\nfunction translateTypeToStatusByte(type: string): number{\n  switch(type){\n    case('noteOff'): return 0x80;\n    case('noteOn'): return 0x90;\n    case('afterTouch'): return 0xA0;\n    case('cc'): return 0xB0;\n    case('controlChange'): return 0xB0;\n    case('programChange'): return 0xC0;\n    case('channelPressure'): return 0xD0;\n    case('pitchWheel'): return 0xE0;\n    default: return 0x00;\n  }\n};\n\nexport interface MIDICommand {\n  channel: number;\n  cc?: number ;\n  value?: number;\n  velocity?: number;\n  pitch?: number;\n  device?: WebMidi.MIDIOutput;\n  type?: string;\n  log?: boolean;\n}\n\nfunction sendMIDIMessage(props: MIDICommand): string {\n  const {\n    channel,\n    cc,\n    value,\n    pitch,\n    device,\n    type='cc',\n    log,\n  } = props;\n\n  const firstStatusByte = translateTypeToStatusByte(type);\n  const statusBytes = firstStatusByte + (channel ?? 0);\n  const msg = [statusBytes, pitch || (cc || 0), value || 0];\n  if (device) {\n    try{\n      device.send(msg);\n    }catch(error){\n      if(log) console.warn(error);\n      return 'an error occured.'\n    }\n    return `MIDI message successfully sent : ${msg}`;\n  }\n  return 'No device specified';\n}\n\nfunction onMIDIMessage(event:WebMidi.MIDIMessageEvent): { data: Uint8Array, timeStamp: number, str: string } {\n  let str = '';\n  for (let i = 0; i < event.data.length; i += 1) {\n    str += `0x${event.data[i].toString(16)} `;\n  }\n  return { data: event.data, timeStamp: event.timeStamp, str };\n}\n\ninterface openMIDIInputArgs{\n  input:WebMidi.MIDIInput, \n  callback?:(args:{relVal:string, input:ReturnType<typeof onMIDIMessage>})=>void\n}\n\nasync function openMIDIInput (props:openMIDIInputArgs): Promise<WebMidi.MIDIInput | Error> {\n  const { input, callback } = props;\n  if (typeof (input) !== 'object') return new Error('No input supplied');\n  if (input.connection === 'open' && !callback) return input;\n  input.onmidimessage = (msg:WebMidi.MIDIMessageEvent) => onMIDIMessage(msg);\n  if (typeof (callback) === 'function') {\n    const cb = (msg:WebMidi.MIDIMessageEvent) => {\n      const message = onMIDIMessage(msg);\n      const stateObj = { relVal: 'mostRecentMessage', input: message };\n      callback(stateObj);\n    };\n    input.onmidimessage = (msg:WebMidi.MIDIMessageEvent) => cb(msg);\n  }\n  await input.open();\n  return input;\n}\n\n/**\n * @description Closes and returns the input\n * @param {MIDIInput} input\n * @returns {MIDIInput}\n */\nasync function closeMIDIInput(input:WebMidi.MIDIInput): Promise<WebMidi.MIDIInput> {\n  await input.close();\n  return input;\n}\n\n\ninterface MIDIContextValue {\n}\n\nconst MIDIContext = createContext<MIDIContextValue>({} as MIDIContextValue);\n\n\n\nfunction useStoreData() {\n  const store:React.MutableRefObject<{\n    byDevice:any,\n    byChannel:any\n}> = useRef({ byDevice: {}, byChannel: {} });\n\n  const get = useCallback((props?:{channel?:number; cc?:number; device?:WebMidi.MIDIInput|WebMidi.MIDIOutput}) =>{\n    if (!props) return store.current;\n    const { channel, cc, device } = props;\n    if (device) {\n      return [...store.current.byDevice[device.id]].filter((record) => {\n        if (channel && (record.channel !== channel)) return false;\n        if (cc && (record.cc !== cc)) return false;\n        return true;\n      });\n    }\n    if(!channel) return store.current;\n    if (!cc) return store.current.byChannel[channel];\n    return store.current.byChannel[channel][cc];\n  },[]);\n  const set = useCallback((value:{channel:number, cc:number, value:number, device:WebMidi.MIDIPort}) => {\n    store.current = {\n      byChannel: {\n        ...store.current.byChannel,\n        [value.channel]: {\n          ...store.current.byChannel[value.channel],\n          [value.cc]: value.value,\n        },\n      },\n      byDevice: {\n        ...store.current.byDevice,\n        [value.device.id]: {\n          ...store.current.byDevice[value.device.id],\n          [value.channel]: {\n            ...store.current.byDevice[value.device.id]?.[value.channel],\n            [value.cc]: value.value,\n          },\n        },\n      },\n    };\n  },[]);\n  const subscribers = useRef(new Set());\n\n  const subscribe = useCallback((callback:Function) => {\n    subscribers.current.add(callback);\n    return () => subscribers.current.delete(callback);\n  },[subscribers]);\n\n  return {\n    get,\n    set,\n    subscribe,\n  };\n}\n\n\n\nfunction MIDIProvider(props:{children:React.ReactNode, onError:(err:Error)=>void}):JSX.Element {\n  const { children, onError } = props;\n\n  function reducer(state:Array<WebMidi.MIDIPort | WebMidi.MIDIInput | WebMidi.MIDIOutput>, action:any) {\n    switch (action.type) {\n      case 'add':\n        return [...new Set([...state, action.value])];\n      case 'remove':\n        return state.filter((item) => (!(action.value.id === item.id)));\n      default:\n        throw new Error();\n    }\n  }\n\n  const [connectedMIDIInputs, setConnectedMIDIInputs] = useReducer(reducer, []);\n  const [connectedMIDIOutputs, setConnectedMIDIOutputs] = useReducer(reducer, []);\n  const { get: getMIDIValue, set: setMIDIValue, subscribe } = useStoreData();\n  \n  const [midiAccess, setMIDIAccess] = useState<WebMidi.MIDIAccess|null>(null);\n  const [midiInputs, setMIDIInputs] = useState<WebMidi.MIDIInput[]>([]);\n  const [midiOutputs, setMIDIOutputs] = useState<WebMidi.MIDIOutput[]>([]);\n  useEffect(()=>{\n    initializeMIDI(onError);\n  }, [])\n  const initializeMIDI = useCallback(async (onError:(err:Error)=>void)=>{\n    try{\n      if (!('requestMIDIAccess' in navigator)) throw new Error('MIDI is not supported in this browser.');\n      const tempMidiAccess = await navigator.requestMIDIAccess();\n      setMIDIAccess(()=>tempMidiAccess);\n      setMIDIInputs(()=>([...tempMidiAccess.inputs].map((input) => (input[1]))));\n      setMIDIOutputs(()=>([...tempMidiAccess.outputs].map((output) => (output[1]))));\n    }catch(error){\n      onError(error);\n    }\n  },[]);\n\n  const addMIDIInput = useCallback(async (input: WebMidi.MIDIInput, callback?: openMIDIInputArgs['callback']):Promise<boolean> => {\n    try {\n      if(!midiAccess || !('inputs' in midiAccess)) throw new Error('inputs not available.');\n      await openMIDIInput({input, callback});\n      setConnectedMIDIInputs({ type: 'add', value: input });\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }, [midiInputs, midiAccess, connectedMIDIInputs]);\n\n  const removeMIDIInput = useCallback((input:WebMidi.MIDIInput):boolean => {\n    try {\n      closeMIDIInput(input);\n      setConnectedMIDIInputs({ type: 'remove', value: input });\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }, [midiInputs, midiAccess, connectedMIDIInputs]);\n\n  const addMIDIOutput = useCallback((output:WebMidi.MIDIOutput) => {\n    try {\n      if(!midiAccess ||  !('outputs' in midiAccess)) throw new Error('outputs not available.')\n      setConnectedMIDIOutputs({ type: 'add', value: output });\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }, [midiOutputs, midiAccess, connectedMIDIOutputs]);\n\n  const removeMIDIOutput = useCallback((output:WebMidi.MIDIOutput) => {\n    try {\n      setConnectedMIDIOutputs({ type: 'remove', value: output });\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }, [midiOutputs, midiAccess, connectedMIDIOutputs]);\n\n  const sendMIDICC = useCallback((args:{channel:number, cc:number, value:number, device:WebMidi.MIDIOutput}) => {\n    const {\n      channel, cc, value, device,\n    } = args;\n    if (typeof(channel) !== 'number') throw new Error(`no channel provided for cc. Expected a number and received ${channel}`);\n    if (typeof(cc) !== 'number') throw new Error(`no cc# provided for cc. Expected a number and received ${cc}`);\n    if (typeof(value) !=='number') throw new Error(`no value provided for cc. Expected a number and received ${value}`);\n    if (!device) throw new Error(`no device provided for cc. Expected a MIDIOutputDevice and recieved ${device}`);\n    sendMIDIMessage({\n      channel, cc, value, device, type: 'cc',\n    });\n    setMIDIValue({\n      channel, cc, value, device,\n    });\n  }, [connectedMIDIOutputs, sendMIDIMessage]);\n\n  const sendMIDINoteOn = useCallback((args:{channel:number, pitch:number, value?:number, velocity?:number, device:WebMidi.MIDIOutput}) => {\n    const {\n      channel, pitch, value, device, velocity,\n    } = args;\n    if (typeof(channel) !== 'number') throw new Error(`no channel provided for noteOn. Expected a number and received ${channel}`);\n    if (typeof(pitch) !== 'number') throw new Error(`no pitch provided for noteOn. Expected a number and received ${pitch}`);\n    if (typeof(velocity) !== 'number' && typeof(value) !== 'number') throw new Error(`no value/velocity provided for noteOn. Expected a number and received ${velocity ?? value}`);\n    if (!device) throw new Error(`no device provided for noteOn. Expected a MIDIOutputDevice and recieved ${device}`);\n    sendMIDIMessage({\n      channel, pitch, value: value ?? velocity, device, type: 'noteOn',\n    });\n  }, [connectedMIDIOutputs, sendMIDIMessage]);\n\n  const sendMIDINoteOff = useCallback((args:{channel:number, pitch:number, device:WebMidi.MIDIOutput}) => {\n    const {\n      channel, pitch, device,\n    } = args;\n    if (typeof(channel) !== 'number') throw new Error(`no channel provided for noteOff. Expected a number and received ${channel}`);\n    if (typeof(pitch) !== 'number') throw new Error(`no pitch provided for noteOff. Expected a number and received ${pitch}`);\n    if (!device) throw new Error(`no device provided for noteOff. Expected a MIDIOutputDevice and received ${device}`);\n    sendMIDIMessage({\n      channel, pitch, value: 0, device, type: 'noteOff',\n    });\n  }, [connectedMIDIOutputs, sendMIDIMessage]);\n\n  interface MIDIContextValue {\n    initializeMIDI: (onError:(err:Error)=>void) =>void;\n    openMIDIInput: (args:openMIDIInputArgs) => Promise<WebMidi.MIDIInput|Error>;\n    onMIDIMessage: (message:WebMidi.MIDIMessageEvent) => void;\n    getMIDIValue: (args:MIDICommand) => number;\n    sendMIDIMessage: (args:MIDICommand) => void;\n    sendMIDICC: (args:MIDICommand) => void;\n    sendMIDINoteOn: (args:{channel:number, pitch:number, value?:number, velocity?:number, device:WebMidi.MIDIOutput}) => void;\n    sendMIDINoteOff: (args:{channel:number, pitch:number, device:WebMidi.MIDIOutput}) => void;\n    midiAccess:WebMidi.MIDIAccess|null;\n    midiInputs:WebMidi.MIDIInput[];\n    midiOutputs:WebMidi.MIDIOutput[];\n    connectedMIDIInputs:WebMidi.MIDIInput[];\n    addMIDIInput: (input: WebMidi.MIDIInput, callback?: openMIDIInputArgs['callback']) => Promise<boolean>;\n    removeMIDIInput: (input:WebMidi.MIDIInput) => boolean;\n    connectedMIDIOutputs:WebMidi.MIDIOutput[];\n    setConnectedMIDIOutputs: (outputs:WebMidi.MIDIOutput[]) => void;\n    addMIDIOutput: (output:WebMidi.MIDIOutput) => boolean;\n    removeMIDIOutput: (output:WebMidi.MIDIOutput) => boolean;\n    subscribe: (fn:Function) => void;\n  }\n\n\n  const value = useMemo(():MIDIContextValue => ({\n    initializeMIDI,\n    openMIDIInput,\n    onMIDIMessage,\n    getMIDIValue,\n    sendMIDIMessage,\n    sendMIDICC,\n    sendMIDINoteOn,\n    sendMIDINoteOff,\n    midiAccess,\n    midiInputs,\n    midiOutputs,\n    connectedMIDIInputs,\n    addMIDIInput,\n    removeMIDIInput,\n    connectedMIDIOutputs,\n    setConnectedMIDIOutputs,\n    addMIDIOutput,\n    removeMIDIOutput,\n    subscribe,\n  }), [midiInputs, midiOutputs, connectedMIDIInputs, connectedMIDIOutputs, midiAccess]);\n  return (\n    <MIDIContext.Provider value={value}>\n      {children}\n    </MIDIContext.Provider>\n  );\n}\n\ntype SelectorFunction<R> = (state: MIDIContextValue) => R;\n\nfunction useMIDIContext<R>(selector: SelectorFunction<R>): R {\n  const latestSelectedStateRef = useRef<R>();\n  const latestSelectedResultRef = useRef<R>();\n\n  const valueFromContext = useContext(MIDIContext);\n  const selectedState = selector(valueFromContext);\n\n  if (selectedState !== latestSelectedStateRef.current) {\n    latestSelectedStateRef.current = selectedState;\n    latestSelectedResultRef.current = selectedState;\n  }\n\n  return latestSelectedResultRef.current!;\n}\n\ninterface MIDIContextValue {\n  initializeMIDI: (onError:(err:Error)=>void) =>void;\n  openMIDIInput: (args:openMIDIInputArgs) => Promise<WebMidi.MIDIInput|Error>;\n  onMIDIMessage: (message:WebMidi.MIDIMessageEvent) => void;\n  getMIDIValue: (args:MIDICommand) => number;\n  sendMIDIMessage: (args:MIDICommand) => void;\n  sendMIDICC: (args:MIDICommand) => void;\n  sendMIDINoteOn: (args:MIDICommand) => void;\n  sendMIDINoteOff: (args:MIDICommand) => void;\n  midiAccess:WebMidi.MIDIAccess|null;\n  midiInputs:WebMidi.MIDIInput[];\n  midiOutputs:WebMidi.MIDIOutput[];\n  connectedMIDIInputs:WebMidi.MIDIInput[];\n  addMIDIInput: (input: WebMidi.MIDIInput, callback?: openMIDIInputArgs['callback']) => Promise<boolean>;\n  removeMIDIInput: (input:WebMidi.MIDIInput) => boolean;\n  connectedMIDIOutputs:WebMidi.MIDIOutput[];\n  setConnectedMIDIOutputs: (outputs:WebMidi.MIDIOutput[]) => void;\n  addMIDIOutput: (output:WebMidi.MIDIOutput) => boolean;\n  removeMIDIOutput: (output:WebMidi.MIDIOutput) => boolean;\n  subscribe: (fn:Function) => void;\n}\n\n\n\nfunction useMIDI():MIDIContextValue;\nfunction useMIDI(props:{channel?:number, cc?:number, device?:WebMidi.MIDIOutput}):{sendMIDIMessage:(value:number)=>void};\n\nfunction useMIDI(props?:{channel?:number, cc?:number, device?:WebMidi.MIDIOutput}){\n  const { channel, cc, device } = props ?? {};\n  if(typeof(channel) == 'number' && typeof(cc) == 'number'){\n    \n    const send = (value:number) => {\n      sendMIDIMessage({\n        channel, cc, value, device, type:'cc'\n      });\n    };\n    return {\n      sendMIDIMessage: send,\n    };\n  }\n  return useMIDIContext((cv)=>cv);\n}\n\nfunction useMIDIOutput(requestedDevice: number | string){\n  const midiOutputs = useMIDIContext((cv)=>cv.midiOutputs);\n  const sendMIDICC = useMIDIContext((cv)=>cv.sendMIDICC);\n  const sendMIDIMessage = useMIDIContext((cv)=>cv.sendMIDIMessage);\n  const sendMIDINoteOn = useMIDIContext((cv)=>cv.sendMIDINoteOn);\n  const sendMIDINoteOff = useMIDIContext((cv)=>cv.sendMIDINoteOff);\n\n  let device = (typeof (requestedDevice) == 'number') \n    ? midiOutputs[requestedDevice] \n    : midiOutputs.filter((device)=>(device.name === requestedDevice))[0];\n  if(!device) {\n    return {\n      device, \n      sendMIDICC:()=>{}, \n      sendMIDIMessage:()=>{}, \n      sendMIDINoteOn:()=>{}, \n      sendMIDINoteOff:()=>{}\n    }\n  };\n  return {\n    device,\n    sendMIDICC:(command:MIDICommand)=>{\n      sendMIDICC({device, ...command});\n    },\n    sendMIDIMessage:(command:MIDICommand)=>{\n      sendMIDIMessage({device, ...command});\n    },\n    sendMIDINoteOn:(command:MIDICommand)=>{\n      sendMIDINoteOn({device, ...command});\n    },\n    sendMIDINoteOff:(command:MIDICommand)=>{\n      sendMIDINoteOff({device, ...command});\n    },\n  }\n}\n\nfunction useMIDIInput(requestedDevice: number | string){\n  const midiInputs = useMIDIContext(cv=>cv.midiInputs);\n  let device:WebMidi.MIDIInput;\n  try{\n\n    if(typeof (requestedDevice) == 'number'){\n      device = midiInputs[requestedDevice];\n    }\n    else{\n      device = midiInputs.filter((device:WebMidi.MIDIInput)=>(device.name === requestedDevice))[0];\n    }\n    if(!('connection' in device)) throw new Error('no device');\n    if(device.connection == 'closed') device.open();\n    return device;\n  }catch(err){\n    return null;\n  }\n}\n\nfunction useMIDIActions(device?:WebMidi.MIDIOutput){\n  const sendMIDICC = useMIDIContext((cv)=>cv.sendMIDICC);\n  const sendMIDIMessage = useMIDIContext((cv)=>cv.sendMIDIMessage);\n  const sendMIDINoteOn = useMIDIContext((cv)=>cv.sendMIDINoteOn);\n  const sendMIDINoteOff = useMIDIContext((cv)=>cv.sendMIDINoteOff);\n\n  if(!device){\n    return {sendMIDICC, sendMIDIMessage, sendMIDINoteOn, sendMIDINoteOff};\n  }\n  return {\n    sendMIDICC:(command:MIDICommand)=>{\n      sendMIDICC({device, ...command});\n    },\n    sendMIDIMessage:(command:MIDICommand)=>{\n      sendMIDIMessage({device, ...command});\n    },\n    sendMIDINoteOn:(command:MIDICommand)=>{\n      sendMIDINoteOn({device, ...command});\n    },\n    sendMIDINoteOff:(command:MIDICommand)=>{\n      sendMIDINoteOff({device, ...command});\n    },\n  }\n}\n\nconst index = { MIDIProvider, useMIDI, useMIDIInput, useMIDIOutput, useMIDIActions, useMIDIContext };\n\nexport default index;\n\nexport { MIDIProvider, useMIDI, useMIDIInput, useMIDIOutput, useMIDIActions, useMIDIContext };\n"],"names":[],"mappings":"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"}